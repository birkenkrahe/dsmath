#+TITLE: DESCRIBING RAW DATA
#+AUTHOR: MARCUS BIRKENKRAHE
#+SUBTITLE: Applied math for data science (DSC 482/MTH 445) Fall 2022
#+STARTUP:overview hideblocks indent inlineimages
#+attr_html: :width 700px
#+caption: From "Person of Interest" (2011-2016) by Jonathan Nolan
[[../img/3_poi.png]]

- What is statistics?
- Statistical variables
- Numeric variables
- Categorical variables
- Univariate and multivariate data
- Parameter or statistic?
- Exercises
* DONE What is statistics?

#+begin_quote
"Statistics are all around us, from marketing to sales to
healthcare. The ability to collect, analyze, and draw conclusions from
data is not only extremely valuable, but it is also becoming
commonplace to expect roles that are not traditionally analytical to
understand the fundamental concepts of statistics." (DataCamp, n.d.)
#+end_quote

- Which information does this "definition" contain?

  #+begin_notes
  - Application of statistics (marketing, sales, healthcare)
  - Input (data), process (collect, analyze), and output (conclusions)
  - Importance (commonplace)
  #+end_notes

- Okay, but what *is* statistics?

  #+begin_notes
  Statistics is the practice of turning data into information to
  identify trends and understand features of populations. (Davies, 2016)
  #+end_notes

  #+begin_notes
  Statistics is all about using the data from samples to draw
  conclusions about populations. (Schmuller , 2017)
  #+end_notes

  #+begin_notes
  "Statistics, the science of collecting, analyzing, presenting, and
  interpreting data." (Britannica)
  #+end_notes

* DONE What is data?
#+attr_html: :width 400px
[[../img/3_creation.png]]

- Lat. "/datum/" = that what is given:
  1) entity - for example a corporation or a school
  2) event - for example an event like an election
  3) process - for example a marketing campaign

- /Raw/ data = records or observations that make up a /sample/

- /Big/ data = Volume + Velocity + Variety[fn:1]

* DONE What is data to R?

[[../img/3_data.jpg]]

- Data can be /read in/ from external files (e.g. ~read.table~[fn:2])

- Data can be /stored/ as R objects (e.g. ~data.frame~)

- Data can be /summarized/ and /analyzed/ using R functions (e.g. ~summary~)

* DONE Statistical variables

- In statistics, /variables/ are characteristics of individuals in a
  population

- An /individual/ and /population/ are (useful) abstractions (*Why?*)

- First step: identify and categorize the available variables

* DONE Example: data frames

- We use the ~data.frame~ function to create a data frame from scratch

- Data are supplied as /vectors/ of the same length

- Data are grouped by /variable/ (column vector)

- R code[fn:3]:
  #+name: mydata
  #+begin_src R :session *R* :results output
    mydata <- data.frame (
      person = c("Peter", "Lois", "Meg", "Chris", "Stewie"),
      age = c(42, 40, 17, 14, 1),
      sex = factor(c("M", "F", "F", "M", "M")))
    mydata
  #+end_src

  #+RESULTS: mydata
  :   person age sex
  : 1  Peter  42   M
  : 2   Lois  40   F
  : 3    Meg  17   F
  : 4  Chris  14   M
  : 5 Stewie   1   M

- R variables: character vector, numbers, factor with levels

- To see the structure of an R object, use the function ~str~.
  #+name: str
  #+begin_src R :exports both :session :results output
    str(mydata)
  #+end_src

  #+RESULTS: str
  : 'data.frame':       5 obs. of  3 variables:
  :  $ person: chr  "Peter" "Lois" "Meg" "Chris" ...
  :  $ age   : num  42 40 17 14 1
  :  $ sex   : Factor w/ 2 levels "F","M": 2 1 1 2 2

- To extract portions of the data, use index operators ~$~ and ~[]~.
  #+name: subset
  #+begin_src R :exports both :session :results output
    ## extract row 2 in column 2
    mydata[2,2]

    ## extract rows 2 to 5 in column 2
    mydata[2:4,2]

    ## extract age
    mydata$age

    ## extract Lois' age (row 2, column 2)
    mydata$age[2]

    ## extract persons older than 40
    mydata$person[mydata$age >= 40]

    ## extract age of persons older than 40
    mydata$age[mydata$age >= 40]
  #+end_src

  #+RESULTS: subset
  : [1] 40
  : [1] 40 17 14
  : [1] 42 40 17 14  1
  : [1] 40
  : [1] "Peter" "Lois"
  : [1] 42 40

- In the last command, we extract from the column vector
  ~mydata$person~ only those values that are greater 40.

- An alternative extraction method uses the ~subset~ function
  (Kabacoff, 2017).
  #+name: subset1
  #+begin_src R :exports both :session :results output
    old <- subset(x=mydata, mydata$age >= 40)
    old$person
    old_male <- subset(x=mydata, mydata$age >= 40 & mydata$sex == "M")
    old_male$person
  #+end_src

  #+RESULTS: subset1
  : [1] "Peter" "Lois"
  : [1] "Peter"

- To extract elements with multiple conditions, you need to build
  logical expressions.
  #+name: logical
  #+begin_src R :exports both :session :results output
    ## extract persons who are older than 40 and male
    mydata$person[mydata$age >= 40 & mydata$sex == "M"]
  #+end_src

  #+RESULTS: logical
  : [1] "Peter"

- To report size of data frames - number of records and variables,
  or rows and columns, use ~nrow~, ~ncol~ and ~dim~.
  #+name: size
  #+begin_src R :exports both :session :results output
    nrow(mydata) # retrieve number of rows or records

    ncol(mydata) # retrieve number of columns or variables

    dim(mydata)  # retrieve both number of rows and columns
  #+end_src

  #+RESULTS: size
  : [1] 5
  : [1] 3
  : [1] 5 3

* TODO Practice: data frames

[[../img/3_practice.jpg]]

* Numeric variables

- /Numerical/ variables are variables whose observations are naturally
  recorded as numbers.

- There are /continous/ and /discrete/ numerical variables.

  1) Continuous variables can be recorded as values in some interval,
     up to any number of decimals. Example: an observation of rainfall
     amount of 15 mm or of 15.42135 mm. The number of decimals provide
     the /precision/ of the measurement.

  2) Discrete variables can only take on distinct numeric values. If
     the range is restricted, there is a finite number of possible
     values. Example: number of heads in 20 coin flips. The possible
     outcomes are restricted to integers in the interval [0,20].

* Categorical variables

- /Categorical/ variables can only take a finite number of possibilities
  (or categories) but they are not always recorded as numeric values

- There are /nominal/ and /ordinal/ categorical variables.

  1) Nominal variables cannot be logically ranked. Example: sex, with
     possible values *male* or *female*, and their order is irrelevant.

  2) Ordinal variables can be naturally ranked. Example: dose of a
     drug, with possible values low, medium, and high. These amounts
     can be ordered in increasing or decreasing order.

* Example: chick weights

- The data frame ~chickwts~ is available in the automatically loaded
  ~datasets~ package. You can check that with ~search()~.
  #+name: chickwts
  #+begin_src R :exports both :session :results output
    search()
  #+end_src

- You can check the structure of ~chickwts~ with ~str~.
  #+name: str_chicktws
  #+begin_src R :exports both :session :results output
    str(chickwts)
  #+end_src

- You can look at the first five records of the data set in two
  different ways, with the ~head~ function, or by extraction with the
  index operator[fn:4].
  #+name: head_chickwts
  #+begin_src R :exports both :session :results output
    chickwts[1:5,]
  #+end_src

- You can look at the meaning and origin of this data set with the
  ~help~ function (the help is better invoked from the R console)
  #+begin_example R
    help(chickwts)  # opens info sheet in default browser
  #+end_example

- In the help, you see that these data contain the weights of 71
  chicks in grams after six weeks, alongside 6 types of food given to
  them.

- ~weight~ is a /numeric/ measurement that can fall anywhere on the
  continuum - it's a continuous variable. However, the recorded values
  seem to have been rounded.
  #+name: weight
  #+begin_src R :exports both :session :results output
    chickwts$weight # show all values of chick weights
  #+end_src

- ~feed~ is a /categorical/ variable with six non-numeric possible
  outcomes. Since these outcomes are not naturally ordered, it is a
  /nominal/ categorical variable. The printout shows the levels in
  alphabetical order.
  #+name: feed
  #+begin_src R :exports both :session :results output
    chickwts$feed
  #+end_src

* Univariate and multivariate data

- Data related to only one dimension are called /univariate/

- For example, ~chickwts$weight~ is univariate: each measurement can be
  expressed with a single number, and stored as a /vector/.

- When measuring entities with more than one component associated with
  each observation, we measure /multivariate/ data, and stored as /array/.

- For example, /spatial coordinates/ have at least two components, a
  horizontal x- and a vertical y-coordinate. Each component on its own
  is not particularly useful. They are stored as a /matrix/.

* Example: quake locations

- The built-in data set ~quakes~ give the locations of 1000 seismic
  events recorded off the coast of Fiji.

- Look at the first five events and read the descriptions in the help.
  #+name: quakes
  #+begin_src R :exports both :session :results output
    ...
  #+end_src

- The data set records spatial location data, depth in km, the
  magnitude on the Richter scale, and the number of observation
  stations that recorded the event.

- You can easily plot longitude and latitude of these 1,000 events:
  #+name: loc_quakes
  #+begin_src R :file ../img/quakes.png :session :results output graphics file
    plot(x=quakes$long,y=quakes$lat,xlab="Longitude", ylab="Latitude")
  #+end_src

* Parameter vs statistic

- Statistics is concerned with understanding population features

- A population is a collection of individuals or entities

- /Parameters/ are population characteristics

- Populations cannot be accessed directly - instead, /samples/ are taken

- /Statistics/ are estimates of parameters of interest using the sample

* Example: cat lovers

Example: let's say you wanted to know the average age of women in the
US who own cats.

1) Population: all women in the US who own at least 1 cat

2) Parameter: mean age of US women who own at least 1 cat

3) Sample: randomly identify a smaller number of women with cat(s)

4) Statistic: mean age of women in the sample

[[../img/3_parameter.png]]

* TODO Practice: statistical variables

[[../img/3_practice.jpg]]

* References

- DataCamp (n.d.). Introduction to Statistics. URL: datacamp.com.
- Davies TD (2016). Book of R. NoStarch Press. URL: nostarch.com
- Kabacoff (2017). Quick-R: Subsetting Data. URL: stamethods.net.
- Schmuller J (2017). Statistical Analysis with R for Dummies. URL: wiley.com

* Glossary: concepts

#+name: tab:terms
| TERM                         | MEANING                                          |
|------------------------------+--------------------------------------------------|
| Statistics                   | Data analysis techniques                         |
| Data                         | Entities, events, or processes                   |
| Raw data                     | Data originating from samples                    |
| Big data                     | Volume, Velocity, Variety                        |
| Variable                     | Characteristic of an individual in a population  |
| vector                       | n-tuple of values of the same type               |
| factor                       | vector of categorical variables                  |
| numeric variable             | numbers                                          |
| continuous numeric variable  | potentially infinite numbers, with decimal point |
| discrete numeric variable    | finite set of integer values                     |
| categorical variable         | finite set of non-numeric values                 |
| nominal categorical variable | not naturally ordered categorical variable       |
| ordinal categorical variable | naturally ordered categorical variable           |
| univariate data              | single dimension (vector)                        |
| multivariate data            | more than one dimension (array)                  |
| population                   | individual or collective of interest             |
| parameter                    | population characteristic of interest            |
| sample                       | some data from a population                      |
| statistic                    | sample characteristic of interest                |

* Glossary: code

#+name: tab:code
| CODE       | MEANING                                |
|------------+----------------------------------------|
| ~read.table~ | R function to read tabular data        |
| ~data.frame~ | R function to create a data frame      |
| ~summary~    | R function to get summary statistics   |
| ~c~          | R function to create vectors           |
| ~<-~         | R assignment operator (right to left)  |
| ~factor~     | R function to create factor vector     |
| ~$~          | Accessor operator                      |
| ~[]~         | Index operator                         |
| ~subset~     | R function to extract subset of values |
| ~nrow~       | R function to return no. of rows       |
| ~ncol~       | R function to return no. of columns    |
| ~dim~        | R function to return object dimensions |

* Footnotes

[fn:4]The ~head~ function prints 6 rows by default. To print only 5
rows, you need to restrict its range with ~head(x=chickwts,n=5)~

[fn:3] Recall that a data frame consists of vectors. It is created
with the ~data.frame~ function - its arguments are vectors of any
type. Numerical or character vectors are created with the ~c~
function. Its arguments are values of any one type - characters or
numbers. Factors are vectors, and they are created using the ~factor~
function. The difference is that their levels can be ordered
explicitly.

[fn:2]/You can get help on any of the examples with ~?~ or ~help()~.

[fn:1]This is the "3V" definition of big data. You'll find other
attributes, like "value" or "veracity", which are not directly
measurable, however.
