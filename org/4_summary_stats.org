#+TITLE: SUMMARY STATISTICS
#+AUTHOR: MARCUS BIRKENKRAHE
#+SUBTITLE: Applied math for data science (DSC 482/MTH 445) Fall 2022
#+STARTUP:overview hideblocks indent inlineimages
#+attr_html: :width 700px
#+caption: poster for "The Terminal List" (Amazon, 2022-).
[[../img/4_terminallist.jpg]]

- Centrality: Mean, Median, Mode
- Counts, Percentages, and Proportions
- Quantiles, Percentiles, and 5-number-summary
- Spread: Variance, Standard Deviation and Interquartile Range
- Exercises
* Measures of centrality
#+attr_html: :width 600px
[[../img/4_symmetry.jpg]]

- Explain large collections of data
- Describe where numeric observations are centered
- Centrality measures suggest symmetries where none exist

* Mean or arithmetic average

- For a set of n labeled numeric measurements, the sample mean is the
  arithmetic average over all measurements:
  [[../img/mean.png]]

- If you observe 8 points 2, 4.4, 3, 3, 2, 2.2, 2, 4, the mean is:
  #+name: mean
  #+begin_src R :results output
    x <- c(2,4.4,3,3,2,2.2,2,4) # store observations in vector
    avg <- sum(x)/length(x)  # arithmetic mean
    avg  # print mean
  #+end_src

* Median or middle magnitude

- Sort your observations by magnitude
- For an odd number of observations: take the middle value
- For an even number of observations: average two middle values

[[../img/median.png]]

Where the upper index denotes the order statistics: x_i^(t) is the
t-th smallest observation regardless of the observation index i.

- If you observe 8 points 2, 4.4, 3, 3, 2, 2.2, 2, 4, you have n/2=4.
  #+name: median
  #+begin_src R :results output
    x <- c(2,4.4,3,3,2,2.2,2,4) # store observations in vector
    sorted_x <- sort(x)  # sort observations
    sorted_x
    # median by hand:
    (sorted_x[length(x)/2] + sorted_x[length(x)/2+1])/2
  #+end_src

* Mode or most common observation

- Used with numeric-discrete data than numeric-continuous
- Used when discussing probability /density/ functions
- Collection of numeric measurements may have no or > 1 mode

- If you observe 8 points 2, 4.4, 3, 3, 2, 2.2, 2, 4, you can tabulate
  the frequency of each measurement:

  [[../img/table.png]]

* TODO Mean and median with built-in functions

- Create a new Org-mode file
- Create a R code block with header: ~R :results output :session~
- Store the eight observations as a numeric vector ~xdata~:

  {2, 4.4, 3, 3, 2, 2.2, 2, 4}
  #+name: xdata
  #+begin_src R :results output :session
    xdata <- c(2,4.4,3,3,2,2.2,2,4) # store observations in vector
    xdata
  #+end_src
- Compute the ~mean~ and the ~median~ and store them in variables.
  #+name: meanR  
  #+begin_src R :results output :session
    x.bar <- mean(xdata)
    x.bar
  #+end_src  
  #+name: medianR
  #+begin_src R :results output :session
    m.bar <- median(xdata)
    m.bar
  #+end_src  
* TODO Mode with contingency ~table~

- To find a mode, compute the contingency ~table~ for ~xdata~.
  #+name: modeR
  #+begin_src R :results output :session
    xtab <- table(xdata)
    xtab
  #+end_src  
- To identify the most frequent values automatically, use ~range~ which
  reports ~min~ and ~max~ of ~xdata~.
  #+name: range
  #+begin_src R :session :results output
    sort(xdata) # sort vector values
    min(xdata)
    max(xdata)
    range(xdata) # return min and max value
  #+end_src
- Applying these functions to a ~table~ operates on the frequencies:
  #+name: xtabRange
  #+begin_src R :session :results output
    xtab # object that stores the contingency table
    max(xtab) # max frequency in the table
  #+end_src

- Finally, use a logical index vector to get the mode:
  #+name: logical
  #+begin_src R :session :results output
    d.bar <- xtab[xtab == max(xtab)]
    d.bar  # prints the value and the frequency
  #+end_src
  
* TODO Practice: measures of centrality
#+attr_html: :width 400px
[[../img/4_practice.jpg]]

1) Calculate the mean and median weights of the chicks in ~chickwts~
2) Identify the value and frequency of the most common earthquake
   magnitude in ~quakes~

** SOLUTION

1) Calculate the mean and median weights of the chicks in ~chickwts~
   
   #+begin_src R :exports both :session :results output
     str(chickwts)
     mean(chickwts$weight)
     median(chickwts$weight)
   #+end_src

   #+RESULTS:
   : 'data.frame':	71 obs. of  2 variables:
   :  $ weight: num  179 160 136 227 217 168 108 124 143 140 ...
   :  $ feed  : Factor w/ 6 levels "casein","horsebean",..: 2 2 2 2 2 2 2 2 2 2 ...
   : [1] 261.3099
   : [1] 258

   Answer: the average chick weight 261 grams, and the chicken in the
   middle weighed 258 grams.

2) Identify the value and frequency of the most common earthquake
   magnitude in ~quakes~

   #+begin_src R :exports both :session :results output
     str(quakes)
     Qtab <- table(quakes$mag)
     Qtab[Qtab == max(Qtab)]
   #+end_src

   #+RESULTS:
   : 'data.frame':	1000 obs. of  5 variables:
   :  $ lat     : num  -20.4 -20.6 -26 -18 -20.4 ...
   :  $ long    : num  182 181 184 182 182 ...
   :  $ depth   : int  562 650 42 626 649 195 82 194 211 622 ...
   :  $ mag     : num  4.8 4.2 5.4 4.1 4 4 4.8 4.4 4.7 4.3 ...
   :  $ stations: int  41 15 43 19 11 12 43 15 35 19 ...
   : 4.5 
   : 107

   Answer: the most common earthquakes were 107 occurrences of
   magnitude 4.5.
   
* References

- DataCamp (n.d.). Introduction to Statistics. URL: datacamp.com.
- Davies TD (2016). Book of R. NoStarch Press. URL: nostarch.com
- Kabacoff (2017). Quick-R: Subsetting Data. URL: stamethods.net.
- Schmuller J (2017). Statistical Analysis with R for Dummies. URL: wiley.com

* Glossary: concepts

#+name: tab:terms
| TERM                         | MEANING                                          |
|------------------------------+--------------------------------------------------|
| Statistics                   | Data analysis techniques                         |
| Data                         | Entities, events, or processes                   |
| Raw data                     | Data originating from samples                    |
| Big data                     | Volume, Velocity, Variety                        |
| Variable                     | Characteristic of an individual in a population  |
| vector                       | n-tuple of values of the same type               |
| factor                       | vector of categorical variables                  |
| numeric variable             | numbers                                          |
| continuous numeric variable  | potentially infinite numbers, with decimal point |
| discrete numeric variable    | finite set of integer values                     |
| categorical variable         | finite set of non-numeric values                 |
| nominal categorical variable | not naturally ordered categorical variable       |
| ordinal categorical variable | naturally ordered categorical variable           |
| univariate data              | single dimension (vector)                        |
| multivariate data            | more than one dimension (array)                  |
| population                   | individual or collective of interest             |
| parameter                    | population characteristic of interest            |
| sample                       | some data from a population                      |
| statistic                    | sample characteristic of interest                |

* Glossary: code

#+name: tab:code
| CODE       | MEANING                                |
|------------+----------------------------------------|
| ~read.table~ | R function to read tabular data        |
| ~data.frame~ | R function to create a data frame      |
| ~summary~    | R function to get summary statistics   |
| ~c~          | R function to create vectors           |
| ~<-~         | R assignment operator (right to left)  |
| ~factor~     | R function to create factor vector     |
| ~$~          | Accessor operator                      |
| ~[]~         | Index operator                         |
| ~subset~     | R function to extract subset of values |
| ~nrow~       | R function to return no. of rows       |
| ~ncol~       | R function to return no. of columns    |
| ~dim~        | R function to return object dimensions |
| ~head~, ~tail~ | display beginning/end of data set      |
| ~str~        | display structure of data set          |

* Footnotes

[fn:5] Also interesting: the related function ~searchpath()~ which
returns the path searched by R to find packages
#+begin_src R
  searchpaths()
#+end_src

#+RESULTS:
| .GlobalEnv                                   |
| C:/Program Files/R/R-4.1.2/library/stats     |
| C:/Program Files/R/R-4.1.2/library/graphics  |
| C:/Program Files/R/R-4.1.2/library/grDevices |
| C:/Program Files/R/R-4.1.2/library/utils     |
| C:/Program Files/R/R-4.1.2/library/datasets  |
| C:/Program Files/R/R-4.1.2/library/methods   |
| Autoloads                                    |
| C:/PROGRA~1/R/R-41~1.2/library/base          |
 

[fn:4]The ~head~ function prints 6 rows by default. To print only 5
rows, you need to restrict its range with ~head(x=chickwts,n=5)~

[fn:3] Recall that a data frame consists of vectors. It is created
with the ~data.frame~ function - its arguments are vectors of any
type. Numerical or character vectors are created with the ~c~
function. Its arguments are values of any one type - characters or
numbers. Factors are vectors, and they are created using the ~factor~
function. The difference is that their levels can be ordered
explicitly.

[fn:2]/You can get help on any of the examples with ~?~ or ~help()~.

[fn:1]This is the "3V" definition of big data. You'll find other
attributes, like "value" or "veracity", which are not directly
measurable, however.
