#+PROPERTY: header-args:R :session *R* :results output
#+STARTUP: overview hideblocks indent

* QUANTILE COMPUTATION BY HAND

#+begin_src R
  foo <- c(100, 498.5, 22, 0, -33, 100.66, -2)
  foo
#+end_src

#+RESULTS:
: [1] 100.00 498.50  22.00   0.00 -33.00 100.66  -2.00

 1) 0th quantile or minimum of the data set
    #+begin_src R
      min(foo)
    #+end_src

    #+RESULTS:
    : [1] -33

 2) 25th percentile is the median of the lower half of the data
    #+begin_src R
      foo_s <- sort(foo)
      foo
      foo_s
      median(foo_s)
      median(c(-33,-2,0,22)) # 25th percentile or 0.25th quantile
    #+end_src

    #+RESULTS:
    : [1] 100.00 498.50  22.00   0.00 -33.00 100.66  -2.00
    : [1] -33.00  -2.00   0.00  22.00 100.00 100.66 498.50
    : [1] 22
    : [1] -1
    
  3) 50th percentile - the median of the whole data set
     #+begin_src R
       median(foo)
     #+end_src

     #+RESULTS:
     : [1] 22

  4) 75th percentile is the median of the upper half of the data
     #+begin_src R
       median(c(22,100,100.66,498.5)) # 
     #+end_src

     #+RESULTS:
     : [1] 100.33

  5) 100th percentile is the maximum of the data set
     #+begin_src R
       max(foo)
     #+end_src

     #+RESULTS:
     : [1] 498.5

   Compare result vector with ~quantile~ function result:
   #+begin_src R
     q <- quantile(foo)
     q
     names(q) <- NULL
     q
     identical(q,c(-33,-1,22,100.33,498.5))
   #+end_src

   #+RESULTS:
   :     0%    25%    50%    75%   100% 
   : -33.00  -1.00  22.00 100.33 498.50
   : [1] -33.00  -1.00  22.00 100.33 498.50
   : [1] TRUE

   #+begin_src R
     identical(sqrt(2)^2,2)
     all.equal(sqrt(2)^2,2)
   #+end_src

   #+RESULTS:
   : [1] FALSE
   : [1] TRUE
   

* QUANTILES WITH THE ~quantile~ FUNCTION

#+begin_src R
  xdata <- c(2,4.4,3,3,2,2.2,2,4)
  xdata
  sort(xdata)
  quantile(xdata)
#+end_src

#+RESULTS:
: [1] 2.0 4.4 3.0 3.0 2.0 2.2 2.0 4.0
: [1] 2.0 2.0 2.0 2.2 3.0 3.0 4.0 4.4
:   0%  25%  50%  75% 100% 
: 2.00 2.00 2.60 3.25 4.40

#+begin_src R
quantile(xdata, prob=0.3)
#+end_src

#+RESULTS:
:  30% 
: 2.02

 Removing missing values ~NA~ from ~quantile~:
 #+begin_src R
   quantile(c(xdata,NA,NaN), prob=0.8, na.rm=TRUE)
 #+end_src

 #+RESULTS:
 :  80% 
 : 4.16

 Interestingly, adding ~Inf~ alters the quantile.

 Checking if ~quantile~ is generic or not
 #+begin_src R
   methods(quantile)
 #+end_src

 #+RESULTS:
 : [1] quantile.default* quantile.ecdf*    quantile.POSIXt* 
 : see '?methods' for accessing help and source code
 
 #+begin_src R
   quantile(xdata, prob=c(0,0.25,0.50,0.75,1))
   quantile(xdata)
   quantile(xdata, prob=c(0.33,0.66))
 #+end_src

 #+RESULTS:
 :   0%  25%  50%  75% 100% 
 : 2.00 2.00 2.60 3.25 4.40
 :   0%  25%  50%  75% 100% 
 : 2.00 2.00 2.60 3.25 4.40
 :   33%   66% 
 : 2.062 3.000

#+begin_src R
  quantile(xdata,prob=1.5)
#+end_src

#+RESULTS:
: Error in quantile.default(xdata, prob = 1.5) : 'probs' outside [0,1]


* REVIEW OF TEST 6
** Measures of centrality
How are measures of centrality affected by the number of total
observations in the dataset?
** ~summary~ function in ~tapply~

#+begin_src R
  summary(chickwts)
  str(chickwts)
#+end_src

#+RESULTS:
#+begin_example
     weight             feed   
 Min.   :108.0   casein   :12  
 1st Qu.:204.5   horsebean:10  
 Median :258.0   linseed  :12  
 Mean   :261.3   meatmeal :11  
 3rd Qu.:323.5   soybean  :14  
 Max.   :423.0   sunflower:12
'data.frame':	71 obs. of  2 variables:
 $ weight: num  179 160 136 227 217 168 108 124 143 140 ...
 $ feed  : Factor w/ 6 levels "casein","horsebean",..: 2 2 2 2 2 2 2 2 2 2 ...
#+end_example


* PRACTICE ON QUANTILES AND SUMMARY

#+begin_src R
  str(mtcars)
  summary(mtcars)
#+end_src

#+begin_src R
  library(MASS)
  summary(Pima.tr2)
#+end_src

1) Compute quantiles for ~chickwts~

   #+begin_src R
     quantile(chickwts$weight, prob=c(0.25,0.75))
   #+end_src

   #+RESULTS:
   :   25%   75% 
   : 204.5 323.5

2) Interpret the result (full sentence!)
   
3) Compute statistical summary for ~quakes~

   #+begin_src R
     str(quakes)  # use help(quakes)
   #+end_src

   #+RESULTS:
   : 'data.frame':	1000 obs. of  5 variables:
   :  $ lat     : num  -20.4 -20.6 -26 -18 -20.4 ...
   :  $ long    : num  182 181 184 182 182 ...
   :  $ depth   : int  562 650 42 626 649 195 82 194 211 622 ...
   :  $ mag     : num  4.8 4.2 5.4 4.1 4 4 4.8 4.4 4.7 4.3 ...
   :  $ stations: int  41 15 43 19 11 12 43 15 35 19 ...

   #+begin_src R
     summary(quakes$mag[quakes$depth < 400])
     summary(quakes$mag)
   #+end_src

   #+RESULTS:
   :    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   :    4.00    4.40    4.60    4.67    4.90    6.40
   :    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   :    4.00    4.30    4.60    4.62    4.90    6.40

4) Interpret the result (full sentence!)

   



* MEASURES OF SPREAD

** Extended example with hypothetical vectors

#+begin_src R
  xdata <- c(2, 4.4, 3, 3, 2, 2.2, 2, 4)
  xdata
  ydata <- c(1, 4.4, 1, 3, 2, 2.2, 2, 7)
  ydata
#+end_src

#+RESULTS:
: [1] 2.0 4.4 3.0 3.0 2.0 2.2 2.0 4.0
: [1] 1.0 4.4 1.0 3.0 2.0 2.2 2.0 7.0

#+begin_src R
  mean(xdata)
  mean(ydata)
#+end_src

#+RESULTS:
: [1] 2.825
: [1] 2.825

#+name: frame
#+begin_src R :results graphics file :file frame.png
  plot(
    x = xdata,
    type="n",
    xlab="",
    ylab="data vector",
    yaxt="n",
    bty="n",
    main="Comparing two data vectors with identical mean"
  )

  abline(h=c(3,3.5), # draw 2 horizontal lines at y=3 and y=3.5
         lty=2,      # draw a dashed line
         col="gray"  # draw a gray line
         )

  abline(v=mean(xdata), # draw vertical line at x=2.825 (the mean)
         lwd=2,   # draw a thick line
         lty=3    # draw a dotted line
         )

  text(x=c(0.8,0.8),     # location of text boxes
       y=c(3,3.5),
       labels=c("x","y")
       )
#+end_src

#+RESULTS:
[[file:frame.png]]

#+begin_src R :results graphics file :file spread.png :noweb yes
  <<frame>>
  points(
    jitter(c(xdata,ydata)),
    c(rep(3, length(xdata)),
      rep(3.5, length(ydata))),
    cex=1.5
  )
#+end_src

#+RESULTS:
[[file:spread.png]]

** Interquartile range (IQR)

#+begin_src R
  xdata <- c(2, 4.4, 3, 3, 2, 2.2, 2, 4)
  quantile(xdata, prob=c(0.25,0.75))
#+end_src

#+RESULTS:
:  25%  75% 
: 2.00 3.25

** Spread statistics in R

#+begin_src R
  var(xdata)
  sd(xdata)
  IQR(xdata)
  summary(xdata)
#+end_src

#+RESULTS:
: [1] 0.9078571
: [1] 0.9528154
: [1] 1.25
:    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
:   2.000   2.000   2.600   2.825   3.250   4.400

#+begin_src R
  identical(sqrt(var(xdata)),sd(xdata))
  all.equal(sqrt(var(xdata)),sd(xdata))
#+end_src

#+RESULTS:
: [1] TRUE
: [1] TRUE

#+begin_src R
  an <- as.numeric(quantile(xdata,0.75)-quantile(xdata,0.25))
  identical(IQR(xdata),an)
#+end_src

#+RESULTS:
: [1] TRUE

#+begin_src R
    (xdata <- c(2, 4.4, 3, 3, 2, 2.2, 2, 4))
    (ydata <- c(1, 4.4, 1, 3, 2, 2.2, 2, 7))
#+end_src

#+RESULTS:
: [1] 2.0 4.4 3.0 3.0 2.0 2.2 2.0 4.0
: [1] 1.0 4.4 1.0 3.0 2.0 2.2 2.0 7.0

#+begin_src R
  sd(ydata) > sd(xdata)
  IQR(ydata) > IQR(xdata)
#+end_src

#+RESULTS:
: [1] TRUE


 


* PRACTICE: CHICK WEIGHTS AND QUAKES

#+begin_src R
  str(chickwts)
  head(chickwts)
#+end_src

#+RESULTS:
#+begin_example
'data.frame':	71 obs. of  2 variables:
 $ weight: num  179 160 136 227 217 168 108 124 143 140 ...
 $ feed  : Factor w/ 6 levels "casein","horsebean",..: 2 2 2 2 2 2 2 2 2 2 ...
  weight      feed
1    179 horsebean
2    160 horsebean
3    136 horsebean
4    227 horsebean
5    217 horsebean
6    168 horsebean
#+end_example

#+begin_src R
  weights <- chickwts$weight
  mean(weights)
#+end_src

#+RESULTS:
: [1] 261.3099

How far is the weight of each chick away from the average chick
weight?
#+begin_src R
  sd(weights)
#+end_src

#+RESULTS:
: [1] 78.0737

#+begin_src R
  str(quakes)
  head(quakes,3)
#+end_src

#+RESULTS:
#+begin_example
'data.frame':	1000 obs. of  5 variables:
 $ lat     : num  -20.4 -20.6 -26 -18 -20.4 ...
 $ long    : num  182 181 184 182 182 ...
 $ depth   : int  562 650 42 626 649 195 82 194 211 622 ...
 $ mag     : num  4.8 4.2 5.4 4.1 4 4 4.8 4.4 4.7 4.3 ...
 $ stations: int  41 15 43 19 11 12 43 15 35 19 ...
     lat   long depth mag stations
1 -20.42 181.62   562 4.8       41
2 -20.62 181.03   650 4.2       15
3 -26.00 184.10    42 5.4       43
#+end_example

#+begin_src R
  summary(quakes)
#+end_src

#+RESULTS:
#+begin_example
      lat              long           depth            mag      
 Min.   :-38.59   Min.   :165.7   Min.   : 40.0   Min.   :4.00  
 1st Qu.:-23.47   1st Qu.:179.6   1st Qu.: 99.0   1st Qu.:4.30  
 Median :-20.30   Median :181.4   Median :247.0   Median :4.60  
 Mean   :-20.64   Mean   :179.5   Mean   :311.4   Mean   :4.62  
 3rd Qu.:-17.64   3rd Qu.:183.2   3rd Qu.:543.0   3rd Qu.:4.90  
 Max.   :-10.72   Max.   :188.1   Max.   :680.0   Max.   :6.40  
    stations     
 Min.   : 10.00  
 1st Qu.: 18.00  
 Median : 27.00  
 Mean   : 33.42  
 3rd Qu.: 42.00  
 Max.   :132.00
#+end_example

#+begin_src R
  magnitudes <- quakes$mag[quakes$depth < 400]
  summary(magnitudes)
#+end_src

#+RESULTS:
:    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
:    4.00    4.40    4.60    4.67    4.90    6.40

#+begin_src R
  IQR(magnitudes)
#+end_src

#+RESULTS:
: [1] 0.5
